<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <%- include('../partials/dependencies') %>
</head>
<div class="loader" id="loader">
    <div class="cycles">
        <div id="cycle1" class="cycle"></div>
        <div id="cycle2" class="cycle"></div>
        <div id="cycle3" class="cycle"></div>
        <div id="cycle4" class="cycle"></div>
        <div id="cycle5" class="cycle"></div>
    </div>
    <div class="loadng-label">Loading Assets...</div>
</div>
<body>

    <header>
        <% if (Role=="Engineer" ) { %>
            <%- include('../partials/engineer-header',{title:title,IncludeBackButton:0}) %>
                <% }else if(Role=="Admin" ){ %>
                    <%- include('../partials/admin-header',{title:title}) %>
                        <% }else if(Role=="PMO" ){ %>
                            <%- include('../partials/PMO-header',{title:title}) %>
                                <%} if(Role=="Root" ){ %>
                                    <%- include('../partials/root-header',{title:title}) %>
                                        <%}%>
    </header>
    <main class="main_container">
        <form action="#" method="post" enctype="multipart/form-data" id="QCFrom">
            <div class="p-3 section1">
                <div class="d-flex  align-items-center justify-content-center" style="font-size: 13px;">
                    <div class="row justify-content-center me-2" style="width: 30dvw;">
                        <div class="col-mb-1" style="width: 65%">
                            <input type="hidden" class="form-control" id="checklist" required value=" <%= title %>"
                                readonly>
                            <label for="cfas_no" class="form-label">Enter Job ID/CFAS Number </label>
                            <input type="text" class="form-control" id="cfas_no" onchange="getBasicData(this);"
                                placeholder="Min 4 Character" required>
                        </div>
                        <div class="col-md-1" style="width: 35%">
                            <label for="qc_type" class="form-label">QC Type</label>
                            <select id="qc_type" class="form-select" required onchange="getPreviousRecord(this)">
                                <option value="">Select</option>
                                <option value="Self QC">Self QC</option>
                                <option value="IQC">IQC</option>
                            </select>
                        </div>
                    </div>
                    <div class="row justify-content-center me-2" style="width: 30dvw;">


                        <div class="col-md-3" style="width: 50%">
                            <label for="qc_state" class="form-label">State</label>
                            <input type="text" class="form-control" id="qc_state" class="form-select" required disabled>
                        </div>
                        <div class="col-md-3" style="width: 50%">
                            <label for="qc_city" class="form-label">City</label>
                            <input type="text" class="form-control" id="qc_city" class="form-select" required disabled>
                        </div>
                    </div>
                    <div class="row justify-content-left me-2" style="width: max-content;" id="ScoreArea">

                    </div>
                </div>
                <div class=" w-100" style="font-size: 13px;">
                    <label for="remarks" class="form-label">Remarks
                    </label>
                    <textarea name="" id="remarks" cols="30" rows="1" class="form-control" spellcheck="true"
                        placeholder="Any remark for this QC...?"></textarea>
                </div>

            </div>
            </div>
            <div class="d-flex w-100">
                <table class="table table-hover m-2 align-middle table-light" id="QCTable">
                    <thead class="table-primary" style="font-size: 14px;">
                        <tr>
                            <th scope="col">Sl.No</th>
                            <th scope="col">Item</th>
                            <th scope="col">Description</th>
                            <th scope="col">Reference Document</th>
                            <th scope="col" style="width: 10%;">Check</th>
                            <th scope="col">Reviewer Note</th>
                        </tr>
                    </thead>
                    <tbody id="content-area" style="font-size: 14px;">
                        <% if (Object.values(Data).length>0) { %>
                            <% let sectionNumber=1; %>
                                <% for (const Section in Data) { %>

                                    <tr class="table-primary section">
                                        <td>
                                            <b>
                                                <%= sectionNumber%>
                                            </b>
                                        </td>
                                        <td colspan="3" class="sectionName">
                                            <b>
                                                <%= Section %>
                                            </b>
                                        </td>
                                        <td></td>
                                        <td></td>

                                    </tr>
                                    <% let itemNumber=1; %>
                                        <% for (const row of Data[Section]) { %>
                                            <tr class="item-row">
                                                <td class="slno">
                                                    <%= sectionNumber%>.<%= itemNumber%>
                                                </td>
                                                <td style="text-align: start; align-items:start;" class="item">
                                                    <%= row.Item %>
                                                </td>
                                                <td style="text-align: start; align-items:start;" class="Description">
                                                    <%- row.Description %>
                                                </td>
                                                <td>
                                                    <% if (row.Reference_Link!=null && row.Reference_Link!=""
                                                        &&row.Reference_Document!=null && row.Reference_Document!="" ) {
                                                        %>
                                                        <a href="<%= row.Reference_Link %>" target="_blank"><button
                                                                type="button"
                                                                class="btn btn-outline-secondary btn-sm col-9"
                                                                style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .5rem; --bs-btn-font-size: .75rem;"
                                                                class>
                                                                <%= row.Reference_Document %>
                                                            </button></a>
                                                        <% } %>
                                                </td>
                                                <td>
                                                    <div
                                                        class="d-flex flex-row align-items-stretch justify-content-evenly">
                                                        <div class="d-flex flex-column align-items-start mb-3">
                                                            <input type="radio" name="Check_<%= row.Question_ID %>"
                                                                id="Check_<%= row.Question_ID %>_Yes" value="Yes"
                                                                class="form-check-input" checked
                                                                onchange="toggleRequired(this)"><label
                                                                for="Check_<%= row.Question_ID %>_Yes">Yes</label>
                                                        </div>
                                                        <div class="d-flex flex-column align-items-start mb-3">
                                                            <input type="radio" name="Check_<%= row.Question_ID %>"
                                                                id="Check_<%= row.Question_ID %>_No" value="No"
                                                                class="form-check-input" 
                                                                onchange="toggleRequired(this)"><label
                                                                for="Check_<%= row.Question_ID %>_No">No</label>
                                                        </div>
                                                        <div class="d-flex flex-column align-items-start mb-3">
                                                            <input type="radio" name="Check_<%= row.Question_ID %>"
                                                                id="Check_<%= row.Question_ID %>_N/A" value="N/A"
                                                                class="form-check-input"
                                                                onchange="toggleRequired(this)"><label
                                                                for="Check_<%= row.Question_ID %>_N/A">N/A</label>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td><input type="text" class="form-control" 
                                                        id="Note_<%= row.Question_ID %>" placeholder="* Reviewer Note">
                                                    <input type="hidden" name="" value="<%= row.Weight%>"
                                                        id="Weight_<%= row.Question_ID %>">
                                                </td>
                                            </tr>
                                            <% itemNumber++; %>

                                                <% } %>

                                                    <% sectionNumber++; %>

                                                        <% } %>

                                                            <% } else { %>
                                                                <tr>
                                                                    <td colspan="11">
                                                                        <svg xmlns="http://www.w3.org/2000/svg"
                                                                            style="display: none;">
                                                                            <symbol id="check-circle-fill"
                                                                                viewBox="0 0 16 16">
                                                                                <path
                                                                                    d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                                                                            </symbol>
                                                                            <symbol id="info-fill" viewBox="0 0 16 16">
                                                                                <path
                                                                                    d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
                                                                            </symbol>
                                                                            <symbol id="exclamation-triangle-fill"
                                                                                viewBox="0 0 16 16">
                                                                                <path
                                                                                    d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
                                                                            </symbol>
                                                                        </svg>
                                                                        <div class="alert alert-warning alert-dismissible fade show d-flex align-items-center"
                                                                            role="alert">
                                                                            <svg class="bi flex-shrink-0 me-2"
                                                                                role="img" aria-label="Info:">
                                                                                <use xlink:href="#info-fill" />
                                                                            </svg>

                                                                            <strong>Sorry...!😕</strong> Data not found.
                                                                            <button type="button" class="btn-close"
                                                                                data-bs-dismiss="alert"
                                                                                aria-label="Close"></button>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td colspan="9" class="text-center">

                                                                        <a href="/login"
                                                                            class="btn btn-outline-primary rounded-pill"><i
                                                                                class="bi bi-arrow-left-circle-fill"></i>
                                                                            Go
                                                                            Back To Home</a>

                                                                    </td>
                                                                </tr>
                                                                <% } %>
                    </tbody>
                </table>

            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-outline-success m-5">Submit</button>
            </div>
        </form>
        <button type="button" class="scoreButton btn btn-danger rounded-circle" id="ScoreButton">0.0%</button>
        <button onclick="topFunction()" id="myBtn" title="Go to top" style="z-index: 100;"
            class="btn btn-info btn-sm"><i class="bi bi-arrow-up-circle"></i></button>

    </main>
    <%- include('../partials/dependencies-js') %>
        <script>
            function getBasicData(e) {
                var job_id = e.value.trim().replaceAll(' ', "")
                var fn = $("#cfas_no").val();
                var regex = /^[0-9a-zA-Z\_\-]+$/

                if (regex.test(fn)) {
                    if (job_id.length > 3 && regex.test(fn)) {
                        axios.post('/api/getJobData', {
                            params: {
                                jobID: job_id,
                                Checklist: '<%- title %>'
                            }
                        }).then(res => {
                            if (res.status == 200) {
                                updateBasicData(res.data);
                            }
                        })
                            .catch(er => {
                                console.log(er)
                                alert(er.response.data);
                                e.value = null;
                                document.getElementById("qc_state").value = null;
                                document.getElementById("qc_city").value = null;
                                $('#ScoreArea').empty();
                                $('#ScoreArea').width(0);

                            })
                    }
                } else {
                    e.value = null;
                    alert("Special Characters Other Than '-' and '_' are Not Allowed for Job-ID/CFAS Number.")
                }
            }

            function updateBasicData(data) {
                //document.getElementById("cfas_no").setAttribute("readonly", '')
                document.getElementById("qc_state").value = data.State;
                document.getElementById("qc_city").value = data.City;

            }
            function getPreviousRecord(e) {
                $('#ScoreArea').empty();
                $('#ScoreArea').width(0);
                var type = e.value;
                var job_id = document.getElementById("cfas_no").value.replaceAll(" ", '');
                if (job_id.length > 3 && type) {
                    axios.get('/api/getPreciousRecord', {
                        params: {
                            type: type,
                            job_id: job_id
                        }
                    }).then(res => {
                        console.log(res)
                        if (res.status == 200) {
                            if(res.data.Data!=null){
                                updatePreviousScore(res.data.Data)
                            }
                            if(!res.data.Self_QC && type=="IQC" && !res.data.Data){
                                alert("Would you want to fill out the IQC since the Self-QC has not been submitted for this job/CFAS?")
                            }
                        }
                    }).catch(er => {
                        console.log(er)
                        $('#ScoreArea').empty();
                        $('#ScoreArea').width(0);
                        alert(er.response.data.Message)
                    })
                } else {
                    updatePreviousScore({})
                }

            }
            function processData() {
                const contentArea = document.getElementById('content-area');
                const rows = contentArea.querySelectorAll('tr');
                const capturedData = [];
                let currentSection = null;
                let currentSectionData = null;
                let total_yes = 0;
                let total_na = 0;
                let total_no = 0;
                rows.forEach((row) => {
                    if (row.classList.contains('section')) {
                        if (currentSectionData !== null) {
                            capturedData.push(currentSectionData);
                        }
                        currentSection = row.querySelector('.sectionName').textContent.trim();
                        currentSectionData = {
                            sectionName: currentSection,
                            items: []
                        };
                    } else {
                        const item = {
                            SlNo: row.querySelector('.slno').textContent.trim(),
                            Item: row.querySelector('.item').textContent.trim(),
                            Weight: row.querySelector(`input[id*="Weight_"]`).value.trim(),
                            Description: row.querySelector('.Description').textContent.trim(),
                            Check: row.querySelector(`input[name*="Check_"]:checked`).value,
                            Note: row.querySelector(`input[id*="Note_"]`).value.trim()
                        };
                        switch (row.querySelector(`input[name*="Check_"]:checked`).value) {
                            case 'Yes':
                                total_yes += parseInt(row.querySelector(`input[id*="Weight_"]`).value.trim());
                                break;
                            case 'No':
                                total_no += parseInt(row.querySelector(`input[id*="Weight_"]`).value.trim());
                                break;
                            case 'N/A':
                                total_na += parseInt(row.querySelector(`input[id*="Weight_"]`).value.trim());
                                break
                        }

                        currentSectionData.items.push(item);
                    }
                });

                var Percentage = ((total_yes) / ((total_na + total_no + total_yes) - total_na));

                Percentage = (Percentage * 100).toFixed(1);
                document.getElementById("ScoreButton").innerText = Percentage + '%'
                let scoreBtn = document.getElementById("ScoreButton");
                scoreBtn.classList.remove('btn-success', 'btn-danger', 'btn-warning');

                if (Percentage >= 0.0 && Percentage <= 85.0) {
                    scoreBtn.classList.add("btn-danger")
                } else if (Percentage > 85.0 && Percentage <= 98.0) {
                    scoreBtn.classList.add("btn-warning")
                } else if (Percentage > 98.0 && Percentage <= 100.0) {
                    scoreBtn.classList.add("btn-success")
                }
                if (currentSectionData !== null) {
                    capturedData.push(currentSectionData);
                }
                return ({ capturedData, Percentage })
            }

            document.getElementById("QCFrom").addEventListener('submit', async (e) => {
                e.preventDefault()
                var Data = await processData();
                var percentage = Data.Percentage;
                var data = Data.capturedData;
                var QC = document.getElementById("checklist").value.trim();
                var JobID = document.getElementById("cfas_no").value.trim();
                var type = document.getElementById("qc_type").value.trim();
                var state = document.getElementById("qc_state").value;
                var city = document.getElementById("qc_city").value;
                var remark = document.getElementById("remarks").value.trim();

                let newData = []
                data.forEach((section) => {
                    section.items.forEach((row) => {
                        let finalData = {};
                        finalData.Checklist = QC;
                        finalData.state = state;
                        finalData.city = city;
                        finalData.type = type;
                        finalData.JobID = JobID;
                        finalData.Section = section.sectionName;
                        finalData.SlNo = row.SlNo;
                        finalData.Item = row.Item;
                        finalData.Description = row.Description;
                        finalData.Check = row.Check;
                        finalData.Note = row.Note;
                        finalData.Percentage = percentage;
                        finalData.Remarks = remark;
                        newData.push(finalData)
                    })
                })
                axios.post('/api/SubmitQC', {
                    params: {
                        inputData: newData
                    }
                }).then(res => {
                    if (res.status == 200) {
                        console.log(res)
                        alert(res.data.Message + '\n Score is ' + res.data.Score)
                        window.location.reload('/engineer')
                    }
                })
                    .catch(e => {
                        console.log(e);
                        alert(e.response.data.Message);
                    })
            });

            function toggleRequired(radioButton) {
                const noteInputId = 'Note_' + radioButton.name.split('_')[1];
                const noteInput = document.getElementById(noteInputId);

                if (radioButton.value != 'No') {
                    noteInput.removeAttribute('required')
                    noteInput.setAttribute('placeholder', 'Reviewer Note')
                } else {
                    noteInput.setAttribute('required', '')
                    noteInput.setAttribute('placeholder', '* Reviewer Note')
                };
                processData()
            }

            function updatePreviousScore(data) {
                const div = document.getElementById("ScoreArea");
                if (data.length > 0) {
                    $('#ScoreArea').empty();
                    div.style.width = '30dvw'
                    for (let i = 0; i < data.length; i++) {

                        div.innerHTML += `
                        <div class="col-md-3" style="width: 50%">
                            <label for="" class="form-label">${data[i]["Type"]} | ${data[i]["Submitted_By"]}</label>
                            <input type="text" class="form-control" id="" class="form-select"value='${data[i]["Percentage"]}' required disabled>
                        </div>`
                    }
                } else {
                    div.style.width = 'max-content'
                }
            }
        </script>
</body>

</html>